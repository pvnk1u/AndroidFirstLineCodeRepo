<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:orientation="vertical"
    android:layout_width="match_parent"
    android:layout_height="match_parent">

    <!--使用android:id给当前控件定义了一个唯一标识符，
    然后使用android:layout_width和android:layout_height指定了控件的宽度和高度。
    Android中所有的控件都具有这两个属性，可选值有3种：match_parent、wrap_content和固定值。
    match_parent表示让当前控件的大小和父布局的大小一样，也就是由父布局来决定当前控件的大小。
    wrap_content表示让当前控件的大小能够刚好包含住里面的内容，也就是由控件内容决定当前控件的大小。
    固定值表示表示给控件指定一个固定的尺寸，单位一般用dp，这是一种屏幕密度无关的尺寸单位，
    可以保证在不同分辨率的手机上显示效果尽可能地一致，如50 dp就是一个有效的固定值。-->

    <!--TextView中的文字默认是居左上角对齐的，但是可以使用android:gravity来指定文字的对齐方式，
    可选值有top、bottom、start、end、center等，可以用“|”来同时指定多个值，比如如果指定的是"center"，
    效果等同于"center_vertical|center_horizontal"，表示文字在垂直和水平方向都居中对齐。-->

    <!--另外，还可以通过android:textColor属性可以指定文字的颜色，通过android:textSize属性可以指定文字的大小。
    文字大小要使用sp作为单位，这样当用户在系统中修改了文字显示尺寸时，应用程序中的文字大小也会跟着变化。-->
    <TextView
        android:id="@+id/textView"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:gravity="center"
        android:textColor="#00ff00"
        android:textSize="24sp"
        android:text="This is TextView"/>

    <!--
    Button是程序用于和用户进行交互的一个重要控件。它可配置的属性和TextView是差不多的。
    -->

    <!--Android系统默认会将按钮上的英文字母全部转换成大写，如果这不是想要的效果，
    可以在XML中添加android:textAllCaps="false"这个属性，这样系统就会保留原始文字内容了。-->
    <Button
        android:id="@+id/button"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:textAllCaps="false"
        android:text="Button" />

    <!--
    EditText是程序用于和用户进行交互的另一个重要控件，它允许用户在控件里输入和编辑内容，并可以在程序中对这些内容进行处理。
    EditText的应用场景应该算是非常普遍了，发短信、发微博、聊QQ等等，在进行这些操作时，不得不使用到EditText。-->

    <!--
    一些做得比较人性化的软件会在输入框里显示一些提示性的文字，一旦用户输入了任何内容，这些提示性的文字就会消失。
    这种提示功能在Android里是非常容易实现的，我们甚至不需要做任何逻辑控制，因为系统已经帮我们都处理好了。
    只需要使用android:hint属性即可指定一段提示性的文本。-->

    <!--
    随着输入的内容不断增多，EditText会被不断地拉长。这是由于EditText的高度指定的是wrap_content，
    因此它总能包含住里面的内容，但是当输入的内容过多时，界面就会变得非常难看。
    可以使用android:maxLines属性来指定EditText的最大行数，这样当输入的内容超过两行时，文本就会向上滚动，
    EditText则不会再继续拉伸。
    -->
    <EditText
        android:id="@+id/editText"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:hint="Type Something here"
        android:maxLines="2"
        />

    <!--
    ImageView是用于在界面上展示图片的一个控件，它可以让程序界面变得更加丰富多彩。
    图片通常是放在以drawable开头的目录下的，并且要带上具体的分辨率。现在最主流的手机屏幕分辨率大多是xxhdpi的。
    ImageView标签的src属性用来指定图片路径

    由于图片的宽和高都是未知的，所以将ImageView的宽和高都设定为wrap_content，
    这样就保证了不管图片的尺寸是多少，都可以完整地展示出来。
    -->
    <ImageView
        android:id="@+id/imageView"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:src="@drawable/img_1" />


</LinearLayout>